{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/vdom.js"],"names":["f","exports","module","define","amd","window","global","self","this","vdom","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","updateAttribute","element","name","newVal","oldVal","arguments","undefined","slice","toLowerCase","removeEventListener","addEventListener","removeAttribute","setAttribute","createElement","vnode","document","createTextNode","nodeName","attributes","Object","keys","forEach","children","map","node","appendChild","patch","parent","newNode","oldNode","index","childNodes","removeChild","_typeof","replaceChild","assign","Math","max","_len","Array","_key"],"mappings":"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","file":"vdom.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\r\n * Add or remove an attribute/event to\r\n * and from an element\r\n *\r\n * @param {Element} element\r\n * @param {String} name\r\n * @param {String|Number|Boolean|Function} newVal\r\n * @param {String|Number|Boolean|Function} oldVal (optional)\r\n * @api private\r\n */\r\nfunction updateAttribute(element, name, newVal, oldVal = null) {\r\n    if (name[0] === 'o' && name[1] === 'n') {\r\n        name = name.slice(2).toLowerCase();\r\n        if (newVal == null) {\r\n            element.removeEventListener(name, oldVal);\r\n        } else if (oldVal == null) {\r\n            element.addEventListener(name, newVal);\r\n        }\r\n        return;\r\n    }\r\n    if (newVal == null || newVal === false) {\r\n        element.removeAttribute(name);\r\n    } else {\r\n        element.setAttribute(name, newVal);\r\n    }\r\n}\r\n\r\n/**\r\n * Create a DOM node from a virtual\r\n * node\r\n *\r\n * @param {Object|String} vnode\r\n * @param {String} vnode.nodeName\r\n * @param {Object} vnode.attributes\r\n * @param {Array} vnode.children\r\n * @return {Element}\r\n * @api private\r\n */\r\nfunction createElement(vnode) {\r\n    if (typeof vnode === 'string') {\r\n        return document.createTextNode(vnode);\r\n    }\r\n    const element = document.createElement(vnode.nodeName), attributes = vnode.attributes;\r\n    Object.keys(attributes).forEach((name) => updateAttribute(element, name, attributes[name]));\r\n    vnode.children.map(createElement).forEach((node) => element.appendChild(node));\r\n    return element;\r\n}\r\n\r\n/**\r\n * Recursively patch a DOM element so that\r\n * it matches the updated virtual tree\r\n *\r\n * @param {Element} parent\r\n * @param {Object|String} newNode\r\n * @param {Object|String} oldNode (optional)\r\n * @param {Number} index (optional)\r\n * @api public\r\n */\r\nexport function patch(parent, newNode, oldNode = null, index = 0) {\r\n    const element = parent.childNodes[index];\r\n    if (oldNode == null) {\r\n        return parent.appendChild(createElement(newNode));\r\n    }\r\n    if (newNode == null) {\r\n        return parent.removeChild(element);\r\n    } else if (typeof newNode !== typeof oldNode\r\n        || typeof newNode === 'string' && newNode !== oldNode\r\n        || newNode.nodeName !== oldNode.nodeName) {\r\n        return parent.replaceChild(createElement(newNode), element);\r\n    }\r\n    if (newNode.nodeName) {\r\n        for (const name in Object.assign({}, newNode.attributes, oldNode.attributes)) {\r\n            updateAttribute(element, name, newNode.attributes[name], oldNode.attributes[name]);\r\n        }\r\n        for (let i = 0; i < Math.max(newNode.children.length, oldNode.children.length); ++i) {\r\n            patch(element, newNode.children[i], oldNode.children[i], i);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * JSX-compatible virtual DOM builder\r\n *\r\n * @param {String} nodeName\r\n * @param {Object|Null} attributes (optional)\r\n * @param {...String|Object} children (optional)\r\n * @return {Object}\r\n * @api public\r\n */\r\nexport function h(nodeName, attributes, ...children) {\r\n    attributes = attributes || {};\r\n    return {nodeName, attributes, children};\r\n}\r\n"]}